name: Lint

on:
  pull_request:
    types: [ opened, synchronize ]

jobs:
  main:
    runs-on: ubuntu-latest

    outputs:
      dotnet: ${{ steps.x.outputs.dotnet }}
      markdown: ${{ steps.x.outputs.markdown }}

    steps:
      - name: Checkout ${{ github.repository.name }} repository
        uses: actions/checkout@v2

      - name: Check file type
        id: x
        shell: pwsh
        run: |
          Write-Output "::set-output name=dotnet::$(Test-Path *.sln)"
          Write-Output "::set-output name=markdown::$(Test-Path *.md)"

  dotnet:
    runs-on: ubuntu-latest
    needs: main
    if: needs.main.outputs.dotnet == 'True'

    steps:
      - name: Checkout ${{ github.repository.name }} repository
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.0-rc.1.20451.14

      - name: Install dotnet format
        run: dotnet tool install -g dotnet-format --add-source https://dotnet.myget.org/F/format/api/v3/index.json

      - name: Lint .NET code
        run: dotnet format --check --fix-style info --fix-analyzers info --verbosity diagnostic

  markdown:
    runs-on: ubuntu-latest
    needs: main
    if: needs.main.outputs.markdown == 'True'

    steps:
      - name: Install markdownlint-cli
        run: npm install -g markdownlint-cli
      - name: Lint markdown
        run: markdownlint '**/*.md'
